# The PROJECT_NAME variable is a single word.
PROJECT_NAME="s21_decimal"

# Name of suite test.
SUITE_NAME="decimal"

# Function name.
FUNCTION="s21_add"

# Test start counter.
TEST_BEGIN=6001

# How much tests need.
NUMBER_OF_TESTS=4000

# Case start counter.
BEGIN_CASE=61

# Choose number of tests in one case.
TESTS_IN_CASE=100

# Name of your own test function.
TEST_FUNCTION="s21_test_${FUNCTION:4}"

# Compile tests directory.
RESULT_DIR="./result"

################################################################################

# Last test number.
TEST_END=$((TEST_BEGIN + NUMBER_OF_TESTS - 1))

# Type of testing (binary or non-binary function).
TEST_TYPE="binary"

# Conditional statements for a pyton script.
if [[ ${FUNCTION} == "s21_add" ]]; then
  OPERATION="+"
elif [[ ${FUNCTION} == "s21_sub" ]]; then
  OPERATION="-"
elif [[ ${FUNCTION} == "s21_mul" ]]; then
  OPERATION="*"
elif [[ ${FUNCTION} == "s21_div" ]]; then
  OPERATION="/"
elif [[ ${FUNCTION} == "s21_mod" ]]; then
  OPERATION="%"
elif [[ ${FUNCTION} == "s21_is_equal" ]]; then
  OPERATION="=="
elif [[ ${FUNCTION} == "s21_is_not_equal" ]]; then
  OPERATION="!="
elif [[ ${FUNCTION} == "s21_is_less" ]]; then
  OPERATION="<"
elif [[ ${FUNCTION} == "s21_is_less_or_equal" ]]; then
  OPERATION="<="
elif [[ ${FUNCTION} == "s21_is_greater" ]]; then
  OPERATION=">"
elif [[ ${FUNCTION} == "s21_is_greater_or_equal" ]]; then
  OPERATION=">="
elif [[ ${FUNCTION} == "s21_round" ]]; then
  OPERATION="round"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_floor" ]]; then
  OPERATION="floor"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_truncate" ]]; then
  OPERATION="truncate"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_negate" ]]; then
  OPERATION="negate"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_from_int_to_decimal" ]]; then
  OPERATION="int_to_decimal"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_from_float_to_decimal" ]]; then
  OPERATION="float_to_decimal"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_from_decimal_to_int" ]]; then
  OPERATION="decimal_to_int"
  TEST_TYPE="non_binary"
elif [[ ${FUNCTION} == "s21_from_decimal_to_float" ]]; then
  OPERATION="decimal_to_float"
  TEST_TYPE="non_binary"
fi
